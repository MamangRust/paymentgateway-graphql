input FindYearWithdrawStatusInput {
  year: Int!
}

input FindMonthlyWithdrawStatusInput {
  year: Int!
  month: Int!
}

input FindYearWithdrawStatusCardNumberInput {
  cardNumber: String!
  year: Int!
}

input FindMonthlyWithdrawStatusCardNumberInput {
  cardNumber: String!
  year: Int!
  month: Int!
}

input FindYearWithdrawCardNumberInput {
  cardNumber: String!
  year: Int!
}

input FindAllWithdrawInput {
  page: Int
  pageSize: Int
  search: String
}

input FindAllWithdrawByCardNumberInput {
  cardNumber: String!
  page: Int
  pageSize: Int
  search: String
}

input FindByIdWithdrawInput {
  withdrawId: Int!
}

input CreateWithdrawInput {
  cardNumber: String!
  withdrawAmount: Int!
  withdrawTime: DateTime!
}

input UpdateWithdrawInput {
  withdrawId: Int!
  cardNumber: String!
  withdrawAmount: Int!
  withdrawTime: DateTime!
}

type WithdrawResponse {
  id: Int!
  withdrawNo: String!
  cardNumber: String!
  withdrawAmount: Int!
  withdrawTime: String!
  createdAt: String!
  updatedAt: String!
}

type WithdrawResponseDeleteAt {
  id: Int!
  withdrawNo: String!
  cardNumber: String!
  withdrawAmount: Int!
  withdrawTime: String!
  createdAt: String!
  updatedAt: String!
  deletedAt: String
}

type WithdrawMonthStatusSuccessResponse {
  year: String!
  month: String!
  totalSuccess: Int!
  totalAmount: Int!
}

type WithdrawYearStatusSuccessResponse {
  year: String!
  totalSuccess: Int!
  totalAmount: Int!
}

type WithdrawMonthStatusFailedResponse {
  year: String!
  month: String!
  totalFailed: Int!
  totalAmount: Int!
}

type WithdrawYearStatusFailedResponse {
  year: String!
  totalFailed: Int!
  totalAmount: Int!
}

type WithdrawMonthlyAmountResponse {
  month: String!
  totalAmount: Int!
}

type WithdrawYearlyAmountResponse {
  year: String!
  totalAmount: Int!
}

type ApiResponseWithdrawMonthStatusSuccess {
  status: String!
  message: String!
  data: [WithdrawMonthStatusSuccessResponse!]!
}

type ApiResponseWithdrawYearStatusSuccess {
  status: String!
  message: String!
  data: [WithdrawYearStatusSuccessResponse!]!
}

type ApiResponseWithdrawMonthStatusFailed {
  status: String!
  message: String!
  data: [WithdrawMonthStatusFailedResponse!]!
}

type ApiResponseWithdrawYearStatusFailed {
  status: String!
  message: String!
  data: [WithdrawYearStatusFailedResponse!]!
}

type ApiResponseWithdrawMonthAmount {
  status: String!
  message: String!
  data: [WithdrawMonthlyAmountResponse!]!
}

type ApiResponseWithdrawYearAmount {
  status: String!
  message: String!
  data: [WithdrawYearlyAmountResponse!]!
}

type ApiResponsesWithdraw {
  status: String!
  message: String!
  data: [WithdrawResponse!]!
}

type ApiResponseWithdraw {
  status: String!
  message: String!
  data: WithdrawResponse
}

type ApiResponseWithdrawDeleteAt {
  status: String!
  message: String!
  data: WithdrawResponseDeleteAt
}

type ApiResponseWithdrawDelete {
  status: String!
  message: String!
}

type ApiResponseWithdrawAll {
  status: String!
  message: String!
}

type ApiResponsePaginationWithdraw {
  status: String!
  message: String!
  data: [WithdrawResponse!]!
  pagination: PaginationMeta
}

type ApiResponsePaginationWithdrawDeleteAt {
  status: String!
  message: String!
  data: [WithdrawResponseDeleteAt!]!
  pagination: PaginationMeta
}

extend type Query {
  findAllWithdraw(input: FindAllWithdrawInput!): ApiResponsePaginationWithdraw
  findAllWithdrawByCardNumber(
    input: FindAllWithdrawByCardNumberInput!
  ): ApiResponsePaginationWithdraw
  findByIdWithdraw(input: FindByIdWithdrawInput!): ApiResponseWithdraw

  findMonthlyWithdrawStatusSuccess(
    input: FindMonthlyWithdrawStatusInput!
  ): ApiResponseWithdrawMonthStatusSuccess
  findYearlyWithdrawStatusSuccess(
    input: FindYearWithdrawStatusInput!
  ): ApiResponseWithdrawYearStatusSuccess
  findMonthlyWithdrawStatusFailed(
    input: FindMonthlyWithdrawStatusInput!
  ): ApiResponseWithdrawMonthStatusFailed
  findYearlyWithdrawStatusFailed(
    input: FindYearWithdrawStatusInput!
  ): ApiResponseWithdrawYearStatusFailed

  findMonthlyWithdrawStatusSuccessCardNumber(
    input: FindMonthlyWithdrawStatusCardNumberInput!
  ): ApiResponseWithdrawMonthStatusSuccess
  findYearlyWithdrawStatusSuccessCardNumber(
    input: FindYearWithdrawStatusCardNumberInput!
  ): ApiResponseWithdrawYearStatusSuccess
  findMonthlyWithdrawStatusFailedCardNumber(
    input: FindMonthlyWithdrawStatusCardNumberInput!
  ): ApiResponseWithdrawMonthStatusFailed
  findYearlyWithdrawStatusFailedCardNumber(
    input: FindYearWithdrawStatusCardNumberInput!
  ): ApiResponseWithdrawYearStatusFailed

  findMonthlyWithdraws(
    input: FindYearWithdrawStatusInput!
  ): ApiResponseWithdrawMonthAmount
  findYearlyWithdraws(
    input: FindYearWithdrawStatusInput!
  ): ApiResponseWithdrawYearAmount
  findMonthlyWithdrawsByCardNumber(
    input: FindYearWithdrawCardNumberInput!
  ): ApiResponseWithdrawMonthAmount
  findYearlyWithdrawsByCardNumber(
    input: FindYearWithdrawCardNumberInput!
  ): ApiResponseWithdrawYearAmount

  findByActiveWithdraw(
    input: FindAllWithdrawInput!
  ): ApiResponsePaginationWithdrawDeleteAt
  findByTrashedWithdraw(
    input: FindAllWithdrawInput!
  ): ApiResponsePaginationWithdrawDeleteAt
}

extend type Mutation {
  createWithdraw(input: CreateWithdrawInput!): ApiResponseWithdraw
  updateWithdraw(input: UpdateWithdrawInput!): ApiResponseWithdraw

  trashedWithdraw(input: FindByIdWithdrawInput!): ApiResponseWithdrawDeleteAt
  restoreWithdraw(input: FindByIdWithdrawInput!): ApiResponseWithdrawDeleteAt
  deleteWithdrawPermanent(
    input: FindByIdWithdrawInput!
  ): ApiResponseWithdrawDelete

  restoreAllWithdraw: ApiResponseWithdrawAll
  deleteAllWithdrawPermanent: ApiResponseWithdrawAll
}
